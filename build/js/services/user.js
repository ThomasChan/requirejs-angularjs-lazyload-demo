define(["angular"],function(e){e.module("application.User",[]).factory("User",["$http","$cookies","$q",function(e,r,o){return{validatePhone:{filterParams:function(e){return e.Phone&&FILTER.isPhone(e.Phone)?{code:0}:{code:1,error:"请输入正确的 11 位手机号码"}},"do":function(r){return e.get(API.validatePhone.url,{params:r})}},updateUserBaseInfo:{filterParams:function(e){return e.Nickname&&FILTER.isNickname(e.Nickname)?e.Realname&&!FILTER.isLegal(e.Realname)?{code:1,error:"请输入您的真实姓名"}:e.Birthday&&!FILTER.isBirthday(e.Birthday)?{code:1,error:"请输入正确的日期"}:!e.gender||1===e.gender&&2===e.gender?e.nativeplace&&!FILTER.isLegal(e.nativeplace)?{code:1,error:"含有不合法字符"}:e.homeaddr&&!FILTER.isLegal(e.homeaddr)?{code:1,error:"含有不合法字符"}:{code:0}:{code:1,error:"性别选择错误"}:{code:1,error:"昵称可以是汉字、数字、下划线、大小写字母组成，至少 3 位，至多 20 位"}},"do":function(r){return e.get(API.updateUserBaseInfo.url,{params:r})}},uploadAvatar:{"do":function(r){return e.post(API.uploadAvatar.url,r)}},validateRealName:{filterParams:function(e){return e.Realname&&FILTER.isLegal(e.Realname)?e.Idcard&&FILTER.isIdcard(e.Idcard)?{code:0}:{code:1,error:"身份证号码格式不正确"}:{code:1,error:"真实姓名含有不合法字符"}},"do":function(r){return e.get(API.validateRealName.url,{params:r})}},updatePhone:{filterParams:function(e){return e.Phone&&FILTER.isPhone(e.Phone)?e.Vcode&&FILTER.isVcode(e.Vcode)?{code:0}:{code:1,error:"请输入 6 位数字手机验证码 "}:{code:1,error:"请输入正确的 11 位手机号码"}},"do":function(r){return e.get(API.updatePhone.url,{params:r})}},updatePassword:{filterParams:function(e){return e.OldPassword&&FILTER.isPassword(e.OldPassword)?e.NewPassword&&FILTER.isPassword(e.NewPassword)?e.OldPassword===e.NewPassword?{code:1,error:"新密码不可与旧密码相同"}:e.ConNewPassword&&FILTER.isPassword(e.ConNewPassword)?e.ConNewPassword!==e.NewPassword?{code:1,error:"新密码与确认密码不一致"}:{code:0}:{code:1,error:"确认密码含有不合法字符"}:{code:1,error:"新密码含有不合法字符"}:{code:1,error:"旧密码含有不合法字符"}},"do":function(r){return e.get(API.updatePassword.url,{params:r})}},updateHighschoolInfo:{filterParams:function(e){return e.HsCode&&!FILTER.isLegal(e.HsCode)?{code:1,error:"编码含有不合法字符"}:e.AdmYear&&!FILTER.isLegal(e.AdmYear)?{code:1,error:"入学年份含有不合法字符"}:e.AdmMonth&&!FILTER.isLegal(e.AdmMonth)?{code:1,error:"入学月份含有不合法字符"}:e.Grade&&!FILTER.isLegal(e.Grade)?{code:1,error:"年纪含有不合法字符"}:e.Class&&!FILTER.isLegal(e.Class)?{code:1,error:"班级含有不合法字符"}:e.Stuid&&!FILTER.isLegal(e.Stuid)?{code:1,error:"学号含有不合法字符"}:e.HumSci&&!FILTER.isLegal(e.HumSci)?{code:1,error:"文理科选择有误"}:{code:0}},"do":function(r){return e.get(API.updateHighschoolInfo.url,{params:r})}},updateCollegeInfo:{filterParams:function(e){return e.ColCode&&!FILTER.isLegal(e.ColCode)?{code:1,error:"编码含有不合法字符"}:e.AdmYear&&!FILTER.isLegal(e.AdmYear)?{code:1,error:"入学年份含有不合法字符"}:e.AdmMonth&&!FILTER.isLegal(e.AdmMonth)?{code:1,error:"入学月份含有不合法字符"}:e.Grade&&!FILTER.isLegal(e.Grade)?{code:1,error:"年纪含有不合法字符"}:e.Class&&!FILTER.isLegal(e.Class)?{code:1,error:"班级含有不合法字符"}:e.Stuid&&!FILTER.isLegal(e.Stuid)?{code:1,error:"学号含有不合法字符"}:e.Dept&&!FILTER.isLegal(e.Dept)?{code:1,error:"院系含有不合法字符"}:{code:0}},"do":function(r){return e.get(API.updateCollegeInfo.url,{params:r})}},uploadMentorCV:{filterParams:function(e){},"do":function(r){return e.post(API.uploadMentorCV.url+"CvNo=1",r)}},applyForMentor:{filterParams:function(e){return e.Tags?e.Categories?e.intro&&FILTER.isLegal(e.intro)?{code:0}:{code:1,error:"自我介绍含有不合法字符"}:{code:1,error:"请选择分类"}:{code:1,error:"请填写标签"}},"do":function(r){return e.post(API.applyForMentor.url,r.post,{params:r.get})}},getUserBasicInfo:{"do":function(o){return user=r.getObject("user"),user?user:e.get(API.getUserBasicInfo.url,{params:o})}},isLogin:function(){return r.getObject("user")},getUserHighschoolInfo:{"do":function(r){return e.get(API.getUserHighschoolInfo.url,{params:r})}},getUserCollegeInfo:{"do":function(r){return e.get(API.getUserCollegeInfo.url,{params:r})}},getMentorInfo:{"do":function(r){return e.get(API.getMentorInfo.url,{params:r})}},getOrderMentorList:{filterParams:function(e){return!e.OrderStatus||1===e.OrderStatus&&2===e.OrderStatus&&3===e.OrderStatus?{code:0}:{code:1,error:"参数错误"}},"do":function(r){return e.get(API.getOrderMentorList.url,{params:r})}},getRealnameStatus:{"do":function(r){return e.get(API.getRealnameStatus.url,{params:r})}},getUserHighschoolStatus:{"do":function(r){return e.get(API.getUserHighschoolStatus.url,{params:r})}},getUserCollegeStatus:{"do":function(r){return e.get(API.getUserCollegeStatus.url,{params:r})}},addUserTags:{filterParams:function(e){return e.Tag&&FILTER.isLegal(e.Tag)?{code:0}:{code:1,error:"参数错误"}},"do":function(r){return e.get(API.addUserTags.url,{params:r})}},deleteUserTags:{filterParams:function(e){return e.Tag&&FILTER.isLegal(e.Tag)?{code:0}:{code:1,error:"参数错误"}},"do":function(r){return e.get(API.deleteUserTags.url,{params:r})}},getFollowMentorList:{"do":function(r){return e.get(API.getFollowMentorList.url,{params:r})}},updateMentorInfo:{filterParams:function(e){return e.slogan&&FILTER.isLegal(e.slogan)&&e.cee_score&&FILTER.isLegal(e.cee_score)&&e.cee_hum_sci&&FILTER.isLegal(e.cee_hum_sci)&&e.cee_ranking&&FILTER.isLegal(e.cee_ranking)&&e.awards&&FILTER.isLegal(e.awards)&&e.strength&&FILTER.isLegal(e.strength)&&e.selfval&&FILTER.isLegal(e.selfval)&&e.story_title&&FILTER.isLegal(e.story_title)&&e.story&&FILTER.isLegal(e.story)?{code:0}:{code:1,error:"参数错误"}},"do":function(r){return e.post(API.updateMentorInfo.url,{params:r})}},addOfflineCourse:{filterParams:function(e){return e.title&&FILTER.isLegal(e.title)?e.desc&&FILTER.isLegal(e.desc)?e.duration&&FILTER.isLegal(e.duration)?e.price&&FILTER.isLegal(e.price)?{code:0}:{code:1,error:"请填写正确的金额"}:{code:1,error:"请选择正确的时间段"}:{code:1,error:"请输入正确的描述"}:{code:1,error:"请输入标题"}},"do":function(r){return e.post(API.addOfflineCourse.url,{params:r})}},updateOfflineCourse:{filterParams:function(e){return!e.course_id||isNaN(e.course_id)?{code:1,error:"参数错误"}:e.title&&FILTER.isLegal(e.title)?e.desc&&FILTER.isLegal(e.desc)?e.duration&&FILTER.isLegal(e.duration)?e.price&&FILTER.isLegal(e.price)?{code:0}:{code:1,error:"请填写正确的金额"}:{code:1,error:"请选择正确的时间段"}:{code:1,error:"请输入正确的描述"}:{code:1,error:"请输入标题"}},"do":function(r){return e.post(API.updateOfflineCourse.url,{params:r})}},getInviteeList:{"do":function(r){return e.get(API.getInviteeList.url,{params:r})}},validateInviteeEdu:{filterParams:function(e){return!e.InviteeId||isNaN(e.InviteeId)?{code:1,error:"参数错误"}:{code:0}},"do":function(r){return e.get(API.validateInviteeEdu.url,{params:r})}}}}])});